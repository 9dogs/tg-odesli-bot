stages:
  - stage: test
    displayName: 'Test'

    jobs:
      - job: 'Test'
        pool:
          vmImage: 'ubuntu-latest'
        variables:
          PYTHONPATH: $(Build.SourcesDirectory)
        strategy:
          maxParallel: 2
          matrix:
            Python_37:
              python.version: '3.7'
            Python_38:
              python.version: '3.8'

        steps:
          - checkout: self
            clean: true

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(python.version)'
              architecture: 'x64'

          - script: |
              pip install poetry
            displayName: 'Install poetry'

          - script: |
              poetry install
            displayName: 'Install deps'

          - script: |
              make test
            displayName: 'Run tests'

          - task: PublishTestResults@2
            inputs:
              testResultsFiles: 'junit.xml'
              testRunTitle: 'Publish test results for Python $(python.version)'
            condition: succeededOrFailed()

          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: 'cobertura'
              summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
              reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
              pathToSources: 'tg_odesli_bot'
            condition: succeededOrFailed()

          - script: |
              bash <(curl -s https://codecov.io/bash)
            displayName: 'Upload codecov'
            env:
              CODECOV_TOKEN: $(CODECOV_TOKEN)
            condition: always()
